Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
 

Example 1:

Input: s = "()"
Output: true
Example 2:

Input: s = "()[]{}"
Output: true
Example 3:

Input: s = "(]"
Output: false
 

Constraints:

1 <= s.length <= 104
s consists of parentheses only '()[]{}'.


class Solution {
public:
    bool isValid(string s) {
        stack<char> check;
        for(auto it:s)
        {
            if(it=='(' || it== '[' || it=='{')
            check.push(it);            
            else
            {
                if(check.empty() || (check.top()=='(' && it!=')') || (check.top() == '[' && it!=']') || (check.top() == '{' && it!='}'))
                {
                    return false;
                }
                check.pop();
            }
        }
        return check.empty();        
    }
};
